/*Problem 1 Project Euler

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.*/

var count = 0;
var get_sum = function(){
  for(var i = 0; i < 1000; i++){
    if(i % 3 == 0 || i % 5 == 0){
      count += i;
    }
  }
  console.log(count);
}

get_sum();

/*Problem 2 Project Euler

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

var getSum = function(number){
  var myNumbers = [];
  var totalVal = 0;
  var j = 0,
      k = 1,
      combinedNum = 0;
  for (var i = 0; i < number; i++){
      combinedNum = j + k;
      j = k;
      k = combinedNum;
      myNumbers.push(combinedNum);
  }
  for (var t = 0; t < myNumbers.length; t++){
    if(myNumbers[t] % 2 === 0 && myNumbers[t] < 4000000){
      totalVal += myNumbers[t];
    }
  }
  console.log(totalVal);
};

getSum(1000);